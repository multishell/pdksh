In places where common sense or at&t ksh differs from the POSIX.2 standard,
the posix option is used to decide what is done.  The compile time define,
POSIXLY_CORRECT, controls the default mode of the shell.  When the shell
is running, the posix option can be set using `set -o posix', or by assigning
to the POSIXLY_CORRECT environment variable (if POSIXLY_CORRECT is in the
environment when the shell starts up, the shell will start in posix mode).
Once set, the posix potion can only be turned off using `set +o posix'.

The following things are controlled by the posix option:
	- parsing `` inside ""
		posix: echo "`echo \"hi\"`" produces "hi"
		!posix: echo "`echo \"hi\"`" produces hi
	- kill -l
		posix: lists only the signal names.
		!posix: lists signal numbers, names and descriptions
			(at&t ksh lists signal numbers and names).
	- fg
		posix: 0 exit value if no errors occur
		!posix: exit value is that of foregrounded job
			(at&t ksh does this)
	- getopts
		posix: options must start with a -
		!posix: options can start with either - or +
			(at&t ksh does this)
	- set
		posix: "set -" does not clear -v and -x flags
		!posix: "set -" does clear -v and -x flags
			(at&t ksh and most other sh shells do this)

	- alias/export/readonly/typeset
		posix: normal argument expansion done
		!posix: field splitting, file globbing, (normal) tilde
			expansion turned off, assignment tilde expandsion
			turned on.
			(at&t ksh and bourne sh shells do this)
	- kill/trap
		posix: signals can be digits only if signal numbers
		       match POSIX values (ie, HUP=1,INT=2,QUIT=3,ABRT=6,
		       KILL=9,ALRM=14,TERM=15).
		!posix: signals can be always digits.
